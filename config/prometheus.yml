# Prometheus configuration for MojoRust Trading Bot
# Scrape configuration for trading bot metrics and system monitoring

global:
  scrape_interval: 15s        # By default, scrape targets every 15 seconds
  evaluation_interval: 15s   # Evaluate rules every 15 seconds
  external_labels:
    environment: "production"
    service: "trading-bot"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load alert rules
rule_files:
  - "rules/*.yml"

# Scrape configurations
scrape_configs:

  # Trading Bot Application Metrics
  - job_name: 'trading-bot'
    static_configs:
      - targets: ['trading-bot-app:8082']
    metrics_path: '/metrics'
    scrape_interval: 10s      # More frequent for trading metrics
    scrape_timeout: 5s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'trading-bot-1'
    metric_relabel_configs:
      # Keep trading_bot, http, health, readiness, and arbitrage metrics
      - source_labels: [__name__]
        regex: 'trading_bot_.*|http_.*|health_.*|readiness_.*|arbitrage_.*'
        action: keep

  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'trading-server'

  # Rust Data Consumer
  - job_name: 'data-consumer'
    static_configs:
      - targets: ['data-consumer:9191']
    metrics_path: /metrics
    scrape_interval: 10s

  # =============================================================================
  # PumpFun Sniper Bot Metrics (Backtest)
  # =============================================================================
  - job_name: 'sniper-bot'
    static_configs:
      - targets: ['trading-bot-sniper:8080']
    metrics_path: /metrics
    scrape_interval: 5s       # High frequency for sniper metrics
    scrape_timeout: 3s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'sniper-bot-1'
      - source_labels: [__address__]
        target_label: service_type
        replacement: 'backtest'
    metric_relabel_configs:
      # Keep sniper-specific metrics
      - source_labels: [__name__]
        regex: 'sniper_.*|backtest_.*|arbitrage_.*|trade_.*|position_.*|rpc_.*|provider_.*|bundle_.*'
        action: keep
      # Filter out high-frequency noise metrics
      - source_labels: [__name__]
        regex: '.*_debug$|.*_trace$'
        action: drop

  # Sniper Bot WebSocket Metrics (Real-time monitoring)
  - job_name: 'sniper-bot-websocket'
    static_configs:
      - targets: ['trading-bot-sniper:8081']
    metrics_path: /ws/metrics
    scrape_interval: 2s       # Very high frequency for real-time updates
    scrape_timeout: 1s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'sniper-bot-ws-1'
      - source_labels: [__address__]
        target_label: connection_type
        replacement: 'websocket'

  # =============================================================================
  # 2025 RPC Provider Metrics
  # =============================================================================
  # RPC Router Health and Performance
  - job_name: 'rpc-router'
    static_configs:
      - targets: ['trading-bot-app:8082']
    metrics_path: '/rpc/metrics'
    scrape_interval: 10s
    scrape_timeout: 5s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'rpc-router-1'
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'rpc_.*|provider_.*|shredstream_.*|liljit_.*|priority_fee_.*|bundle_.*'
        action: keep

  # Helius ShredStream Metrics
  - job_name: 'helius-shredstream'
    static_configs:
      - targets: ['trading-bot-app:8082']
    metrics_path: '/helius/shredstream/metrics'
    scrape_interval: 5s
    scrape_timeout: 3s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'helius-shredstream-1'
      - source_labels: [__address__]
        target_label: provider
        replacement: 'helius'
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'shredstream_.*|websocket_.*|bundle_.*'
        action: keep

  # QuickNode Lil' JIT Metrics
  - job_name: 'quicknode-liljit'
    static_configs:
      - targets: ['trading-bot-app:8082']
    metrics_path: '/quicknode/liljit/metrics'
    scrape_interval: 5s
    scrape_timeout: 3s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'quicknode-liljit-1'
      - source_labels: [__address__]
        target_label: provider
        replacement: 'quicknode'
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'liljit_.*|http_.*|bundle_.*|priority_fee_.*'
        action: keep

  # Jito Bundle Builder Metrics
  - job_name: 'jito-bundle-builder'
    static_configs:
      - targets: ['trading-bot-app:8082']
    metrics_path: '/jito/bundle/metrics'
    scrape_interval: 10s
    scrape_timeout: 5s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'jito-bundle-builder-1'
      - source_labels: [__address__]
        target_label: provider
        replacement: 'jito'
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'bundle_.*|jito_.*|arbitrage_.*|mev_.*'
        action: keep

  # cAdvisor for container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'trading-server'
      - source_labels: [name]
        regex: 'trading-bot.*'
        target_label: container
        replacement: 'trading-bot'

  # TimescaleDB PostgreSQL Exporter (if enabled)
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'timescaledb'

  # DragonflyDB Cloud Metrics (VPC Peering)
  # Scrapes metrics directly from the managed DragonflyDB Cloud instance via VPC peering.
  # This replaces the local redis-exporter configuration.
  - job_name: 'dragonflydb-cloud'
    scheme: https
    metrics_path: /metrics
    static_configs:
      - targets: ['612ehcb9i.dragonflydb.cloud']
    # The provided token is used as a Bearer token for authentication.
    # This is a common pattern for cloud services.
    authorization:
      type: Bearer
      credentials: '8551e334580b024d94d6cbdf41f2dd31'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'dragonflydb-cloud'
      - source_labels: [__address__]
        target_label: vpc_peering_enabled
        replacement: 'true'
      - source_labels: [__address__]
        target_label: vpc_id
        replacement: 'vpc-00e79f7555aa68c0e'
      - source_labels: [__address__]
        target_label: connection_type
        replacement: 'vpc_peering'

  # VPC Peering Monitor (Placeholder)
  # Monitor VPC peering connectivity and performance metrics.
  # This job will be enabled when a VPC peering exporter is deployed.
  - job_name: 'vpc-peering-monitor'
    scheme: http
    metrics_path: /metrics
    static_configs:
      - targets: ['localhost:9200']
    scrape_interval: 30s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'vpc-peering-exporter'

  # CloudWatch Exporter for VPC Metrics
  # Import VPC peering and flow logs metrics from AWS CloudWatch.
  # Configure AWS credentials and region in environment variables.
  - job_name: 'cloudwatch-vpc-metrics'
    scheme: http
    metrics_path: /metrics
    static_configs:
      - targets: ['localhost:9106']  # CloudWatch exporter endpoint
    scrape_interval: 60s
    scrape_timeout: 30s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'cloudwatch-exporter'
      - source_labels: [__address__]
        target_label: aws_region
        replacement: 'us-east-1'

  
  # AlertManager metrics
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager:9093']
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'alertmanager'

# Storage configuration (default settings)