# =============================================================================
# MojoRust Trading Bot Configuration
# =============================================================================

# =============================================================================
# Trading Environment
# =============================================================================
[environment]
trading_env = "development"  # development, staging, production
execution_mode = "paper"     # paper, live

# =============================================================================
# Feature Flags Configuration
# =============================================================================
[features]
# Enable/disable experimental or resource-intensive features
enable_social_analysis = true
enable_honeypot_analysis = true
enable_rpc_router = true
enable_rust_data_consumer = false  # Rust consumer (experimental)
enable_connection_pool_monitoring = true
enable_operational_reliability_monitor = true

# =============================================================================
# RPC Provider Configuration (2025 Features)
# =============================================================================
[rpc_providers]

# Helius Configuration
[rpc_providers.helius]
endpoint = "https://rpc.helius.xyz/?api-key={api_key}"
laserstream_endpoint = "grpc://helius-laserstream.helius-rpc.com:443"
api_key = "${HELIUS_API_KEY}"
priority_fee_api = "https://api.helius.xyz/v0/fees"
use_laserstream = true
latency_target_ms = 30
filter_threshold = 0.99
max_concurrent_requests = 10

# QuickNode Configuration
[rpc_providers.quicknode]
endpoint = "https://{endpoint}.solana-mainnet.quiknode.pro/{api_key}"
lil_jit_endpoint = "https://lil-jit.quicknode.com"
priority_fee_api = "https://api.quicknode.com/v1/solana/priority-fees"
api_key = "${QUICKNODE_API_KEY}"
use_lil_jit = true
urgency_level = "medium"  # low, medium, high, critical
min_tip_lamports = 1000
max_tip_lamports = 10000000
request_timeout_ms = 5000

# RPC Router Configuration
[rpc_providers.router]
primary_provider = "helius"      # helius, quicknode
fallback_provider = "quicknode"
health_check_interval_seconds = 30
circuit_breaker_threshold = 5
circuit_breaker_timeout_seconds = 300
enable_load_balancing = true
enable_failover = true
max_retry_attempts = 3

# =============================================================================
# API Configuration
# =============================================================================
[api]
timeout_seconds = 10.0

# =============================================================================
# Trading Parameters
# =============================================================================
[trading]
initial_capital = 1.0        # SOL
max_position_size = 0.1      # 10% of portfolio per position
min_position_size = 0.01     # 1% of portfolio minimum
max_drawdown = 0.15          # 15% maximum drawdown
daily_trade_limit = 50       # Maximum trades per day
kelly_fraction = 0.5         # Kelly criterion fraction
max_portfolio_risk = 0.02    # 2% max portfolio risk per trade
cycle_interval = 1.0         # Trading cycle interval in seconds

# =============================================================================
# Strategy Configuration
# =============================================================================
[strategy]
rsi_period = 14
oversold_threshold = 25.0
overbought_threshold = 75.0
min_confluence_strength = 0.7
enable_arbitrage = true
enable_momentum = true
enable_mean_reversion = false
support_distance = 0.15
atr_multiplier = 1.5

# Flash Loan Ensemble Strategy Configuration
[strategy.flash_loan_ensemble]
enabled = true
primary_protocol = "save"  # Use Save protocol for all flash loan operations
min_confidence_threshold = 0.7
max_concurrent_strategies = 6
consensus_threshold = 0.5
enable_dynamic_allocation = true

# Individual Strategy Configurations
[strategy.flash_loan_ensemble.sniper_momentum]
enabled = true
weight = 0.25
min_volume_threshold = 50000.0
rsi_oversold = 30.0
momentum_multiplier = 1.5

[strategy.flash_loan_ensemble.statistical_arbitrage]
enabled = true
weight = 0.20
min_correlation = 0.7
z_score_entry = 2.0
z_score_exit = 0.5
lookback_periods = 100

[strategy.flash_loan_ensemble.liquidity_mining]
enabled = true
weight = 0.15
min_liquidity_usd = 10000.0
lp_burn_threshold = 50.0
liquidity_score_weight = 0.4

[strategy.flash_loan_ensemble.social_sentiment]
enabled = true
weight = 0.15
min_mentions = 10
sentiment_threshold = 0.3
confidence_decay_hours = 2.0

[strategy.flash_loan_ensemble.technical_patterns]
enabled = true
weight = 0.15
pattern_types = ["hammer", "engulfing", "doji", "morning_star"]
min_pattern_strength = 0.7
confirmation_required = true

[strategy.flash_loan_ensemble.whale_tracking]
enabled = true
weight = 0.10
min_whale_amount = 1000.0
tracking_window_hours = 1.0
whale_confidence_multiplier = 1.2

# =============================================================================
# Multi-Token Flash Loan Arbitrage Configuration
# =============================================================================
[arbitrage]
# Flash loan arbitrage settings
enable_flash_loan = true
max_flash_loan_amount_sol = 100.0

# Tokens to monitor for arbitrage opportunities
tokens_to_monitor = [
    "So11111111111111111111111111111111111111112",  # SOL (Wrapped SOL)
    "Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB",  # USDT (Tether USD)
    "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v",  # USDC (USD Coin)
    "3NZ9JMVBmGAqocybic2KjQTYjwrLJSZGW3G4XvmaB8im",  # WBTC (Wrapped Bitcoin)
    "Cwe8jPTkAirWEuiSHDgr7EBsl5S71TB3B9Dhnrx7cwnA",  # LINK (Chainlink)
    "5qKyBumD1kcngvZE3Qp6UknYnojx7aPAJNdLMFjUtwg5",  # USDE (Ethena USDe)
    "A1KLoBrKBZi9Su7dphQNUkyKApe5tx1uLVdjZ9mgnz3r",  # USDS (Sky Dollar)
    "cbbtcZFNemZYe4orNZTnGveTZETdkbpNXY7KB4c2rTF",   # CBBTC (Coinbase Wrapped BTC)
    "BTf6gkxMbBDfE1oY8gYCbMcZTxosS95dxKVmeJqyTNGw",  # SUSDE (Staked USDe)
    "EewxydAPCCMs6V4obubWRzvf4wdfJ9sNJY8HbgQwgJ26"   # WLFI (World Liberty Financial)
]

# Token symbol mapping (for logging and display)
[token_symbols]
So11111111111111111111111111111111111111112 = "SOL"
Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB = "USDT"
EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v = "USDC"
3NZ9JMVBmGAqocybic2KjQTYjwrLJSZGW3G4XvmaB8im = "WBTC"
Cwe8jPTkAirWEuiSHDgr7EBsl5S71TB3B9Dhnrx7cwnA = "LINK"
5qKyBumD1kcngvZE3Qp6UknYnojx7aPAJNdLMFjUtwg5 = "USDE"
A1KLoBrKBZi9Su7dphQNUkyKApe5tx1uLVdjZ9mgnz3r = "USDS"
cbbtcZFNemZYe4orNZTnGveTZETdkbpNXY7KB4c2rTF = "CBBTC"
BTf6gkxMbBDfE1oY8gYCbMcZTxosS95dxKVmeJqyTNGw = "SUSDE"
EewxydAPCCMs6V4obubWRzvf4wdfJ9sNJY8HbgQwgJ26 = "WLFI"

# Flash loan strategies
enable_cross_exchange_arbitrage = true
enable_triangular_arbitrage = true
enable_liquidation_strategy = false  # Requires advanced monitoring

# Strategy-specific settings
cross_exchange_min_spread = 0.01     # 1% minimum spread
triangular_min_profit = 0.005        # 0.5% minimum profit
liquidation_min_reward = 0.05        # 5% minimum liquidation reward

# Flash loan provider preferences
preferred_provider = "auto"           # auto, solend, marginfi, mango
solend_fee_rate = 0.0003              # 0.03% flash loan fee
marginfi_fee_rate = 0.0005            # 0.05% flash loan fee
mango_fee_rate = 0.0002               # 0.02% flash loan fee

# Risk management
max_arbitrage_position_size = 0.2     # 20% of portfolio max
min_profit_threshold_sol = 0.01       # 0.01 SOL minimum profit
max_slippage_arbitrage = 0.02         # 2% max slippage for arbitrage
execution_timeout_seconds = 30        # 30 seconds max execution time

# =============================================================================
# Risk Management Configuration
# =============================================================================
[risk]
max_position_risk = 0.02     # 2% risk per position
max_portfolio_risk = 0.05    # 5% total portfolio risk
max_correlation = 0.7        # Maximum correlation between positions
diversification_target = 10  # Target number of diversified positions

# =============================================================================
# Execution Configuration
# =============================================================================
[execution]
max_slippage = 0.03          # 3% maximum slippage
max_priority_fee = 0.001     # Maximum priority fee in SOL
transaction_timeout = 30     # Transaction timeout in seconds
retry_attempts = 3           # Number of retry attempts
confirmation_timeout = 30    # Block confirmation timeout
gas_optimization = true      # Enable gas optimization

# =============================================================================
# Circuit Breakers Configuration
# =============================================================================
[circuit_breakers]
max_drawdown = 0.15                    # 15% maximum drawdown before halt
max_consecutive_losses = 5             # Halt after 5 consecutive losses
max_daily_loss_percentage = 0.10       # 10% maximum daily loss
max_position_concentration = 0.30      # 30% maximum single position size
min_trade_interval_seconds = 60        # 60 seconds minimum between trades per symbol
rapid_drawdown_threshold = 0.05        # 5% drawdown in 5 minutes triggers halt

# =============================================================================
# Database Configuration (TimescaleDB/PostgreSQL)
# =============================================================================
[database]
enabled = true                         # Enable database persistence
host = "localhost"
port = 5432
database = "trading_bot"
user = "trader"
password_env = "DB_PASSWORD"           # Environment variable for password
max_connections = 10
batch_size = 100                       # Batch insert size
auto_flush_interval_seconds = 60       # Auto-flush every 60 seconds

# =============================================================================
# Alert System Configuration
# =============================================================================
[alerts]
enabled = true
channels = ["console", "webhook"]      # Available: console, webhook, telegram, email

# Webhook (Discord/Slack)
webhook_url_env = "DISCORD_WEBHOOK_URL"

# Telegram
telegram_bot_token_env = "TELEGRAM_BOT_TOKEN"
telegram_chat_id_env = "TELEGRAM_CHAT_ID"

# =============================================================================
# Webhook Management Configuration (2025 Features)
# =============================================================================
[webhooks]

# Webhook Manager Service
[webhooks.manager]
enabled = true
host = "0.0.0.0"
port = 8082
use_async = true                     # Use Quart (async) instead of Flask (sync)

# Redis Configuration for webhook event publishing
[webhooks.redis]
url_env = "REDIS_URL"
channels = ["webhook_events:all", "webhook_events:helius", "webhook_events:quicknode"]
publish_timeout_seconds = 5

# Helius Webhook Configuration
[webhooks.helius]
enabled = true
webhook_url_env = "WEBHOOK_URL"
api_key_env = "HELIUS_LASERSTREAM_KEY"
webhook_type = "enhanced"              # basic, enhanced, compressed
transaction_types = ["TRANSFER", "SWAP", "CREATE_TOKEN"]
account_addresses = []
enable_das = true
auth_header_env = "HELIUS_WEBHOOK_AUTH"

# QuickNode Webhook Configuration
[webhooks.quicknode]
enabled = true
webhook_url_env = "WEBHOOK_URL"
api_key_env = "PRIORITY_FEE_API_KEY"
network = "mainnet"
event_types = ["bundle.submitted", "bundle.confirmed", "nft.mint"]
description = "MojoRust trading bot webhook"

# Webhook Processing Configuration
[webhooks.processing]
max_concurrent_requests = 50
request_timeout_seconds = 10
retry_attempts = 3
retry_delay_seconds = 1
enable_rate_limiting = true
rate_limit_per_minute = 1000

# Webhook Filtering
[webhooks.filters]
enable_urgency_filtering = true
min_urgency_level = "low"             # low, medium, high, critical
enable_content_filtering = true
content_keywords = ["token", "bundle", "arbitrage", "snipe"]
blacklisted_addresses = []
max_message_size_bytes = 1048576      # 1MB

# Webhook Statistics and Monitoring
[webhooks.monitoring]
enable_metrics = true
metrics_endpoint = "/metrics"
health_endpoint = "/health"
stats_retention_hours = 24
enable_performance_tracking = true

# Alert cooldowns (seconds)
error_alert_cooldown = 60              # Max 1 error alert per minute
performance_alert_cooldown = 300       # Max 1 performance alert per 5 minutes
trade_alert_cooldown = 0               # No cooldown for trade alerts

# Thresholds
performance_alert_threshold = 0.05     # Alert if metric changes >5%

# =============================================================================
# Strategy Adaptation Configuration
# =============================================================================
[strategy_adaptation]
enabled = true
adaptation_interval_hours = 24         # Adapt every 24 hours
performance_window_hours = 48          # Analyze last 48 hours
min_trades_for_adaptation = 20         # Minimum trades before adapting

# Baseline parameters (what to adapt from)
baseline_confidence_threshold = 0.70   # 70% minimum confidence
baseline_position_size = 0.05          # 5% of portfolio per trade
baseline_stop_loss_percentage = 0.10   # 10% stop loss
baseline_take_profit_percentage = 0.20 # 20% take profit
baseline_max_positions = 5             # Maximum 5 concurrent positions

# Adaptation limits
max_confidence_threshold = 0.90        # Don't go above 90%
min_confidence_threshold = 0.50        # Don't go below 50%
max_position_size_multiplier = 1.5     # Max 150% of baseline
min_position_size_multiplier = 0.5     # Min 50% of baseline

# =============================================================================
# Filter Configuration
# =============================================================================
[filters]
# Instant Spam Detector (ultra-fast <10ms checks)
instant_min_volume_usd = 1000.0         # Minimum volume for instant filter
instant_min_liquidity_usd = 5000.0       # Minimum liquidity for instant filter
instant_min_confidence = 0.30            # Minimum confidence for instant filter
instant_extreme_rsi_low = 5.0            # Extreme oversold RSI threshold
instant_extreme_rsi_high = 95.0          # Extreme overbought RSI threshold

# Spam Filter (aggressive 90%+ rejection)
spam_min_volume_usd = 10000.0            # Minimum volume for spam filter
spam_min_liquidity_usd = 20000.0         # Minimum liquidity for spam filter
spam_min_confidence = 0.70               # Minimum confidence for spam filter
spam_cooldown_seconds = 30.0             # Cooldown between signals per symbol
spam_max_signals_per_symbol = 5          # Max signals per symbol
spam_volume_quality_threshold = 0.6      # Minimum volume quality score
spam_avg_tx_size_threshold = 10.0        # Minimum average transaction size
spam_volume_consistency_threshold = 0.3   # Minimum volume consistency
spam_volume_to_liquidity_ratio = 10.0    # Max volume/liquidity ratio
spam_wash_trading_threshold = 0.7        # Wash trading score threshold
spam_high_frequency_threshold = 100.0     # High frequency transaction threshold
spam_large_tx_count = 10                 # Large transaction count threshold
spam_large_tx_liquidity = 25000.0        # Liquidity threshold for large tx
spam_extreme_rsi_threshold = 80.0        # Extreme RSI for pump detection
spam_rapid_price_change = 50.0           # Rapid price change % (5min)
spam_high_confidence_new_token = 0.8     # High confidence for new tokens
spam_new_token_age_hours = 0.5           # Very new token threshold
spam_careful_token_age_hours = 2.0       # Careful token age threshold
spam_expected_return_limit = 10.0        # Max expected return multiplier
spam_min_stop_loss_distance = 0.05       # Minimum stop loss distance
spam_round_number_confidence = 0.85      # Confidence for round numbers

# Micro Timeframe Filter (ultra-strict for 1s-15s)
micro_min_volume_usd = 15000.0           # Micro timeframe minimum volume
micro_min_confidence = 0.75              # Micro timeframe minimum confidence
micro_cooldown_seconds = 60.0            # Micro timeframe cooldown
micro_min_price_stability = 0.80         # Minimum price stability
micro_max_price_change_5min = 0.30       # Max price change in 5min
micro_extreme_price_spike = 0.50         # Extreme price spike threshold
micro_volume_spike_ratio = 3.0           # Volume spike detection ratio
micro_extreme_price_change = 0.20        # Extreme price change for P&D
micro_max_holder_concentration = 0.80    # Max holder concentration
micro_min_liquidity_ratio = 0.5          # Min liquidity/volume ratio
micro_min_rsi = 20.0                     # Minimum acceptable RSI
micro_max_rsi = 80.0                     # Maximum acceptable RSI
micro_volume_consistency = 0.6           # Minimum volume consistency
micro_liquidity_multiplier = 1.5         # Liquidity should be 1.5x volume
micro_min_tx_size_ratio = 0.001          # Min transaction size ratio
micro_max_tx_size_ratio = 0.10           # Max transaction size ratio
micro_required_checks_percentage = 0.75   # Required checks pass rate

# =============================================================================
# Risk Thresholds Configuration
# =============================================================================
[risk_thresholds]
# RSI-based risk thresholds
rsi_extreme_overbought = 90.0            # Extreme overbought RSI
rsi_very_overbought = 80.0               # Very overbought RSI
rsi_extreme_oversold = 10.0              # Extreme oversold RSI
rsi_very_oversold = 20.0                 # Very oversold RSI
risk_score_extreme_overbought = 0.3      # Risk score for extreme overbought
risk_score_very_overbought = 0.2         # Risk score for very overbought
risk_score_extreme_oversold = 0.2        # Risk score for extreme oversold
risk_score_very_oversold = 0.1           # Risk score for very oversold

# Volume and liquidity risk
risk_score_low_volume = 0.3              # Risk score for low volume
risk_score_low_liquidity = 0.4           # Risk score for low liquidity
liquidity_risk_low_volume = 0.2          # Liquidity risk for low volume
liquidity_risk_low_liquidity = 0.3       # Liquidity risk for low liquidity

# Price movement risk
price_movement_extreme = 0.2             # Extreme price movement (20%)
price_movement_high = 0.1                # High price movement (10%)
risk_score_extreme_movement = 0.3        # Risk score for extreme movement
risk_score_high_movement = 0.2           # Risk score for high movement
volatility_extreme_movement = 0.3        # Volatility score for extreme
volatility_high_movement = 0.2           # Volatility score for high

# Confidence and wash trading
confidence_threshold = 0.6               # Low confidence threshold
risk_score_low_confidence = 0.2          # Risk score for low confidence
wash_trading_volume_threshold = 1000000.0 # Volume for wash trading check
wash_trading_liquidity_threshold = 10000.0 # Liquidity for wash trading
risk_score_wash_trading = 0.4            # Risk score for wash trading
wash_trading_score = 0.8                  # Wash trading score value

# Risk level thresholds
risk_level_critical = 0.7                # Critical risk level threshold
risk_level_high = 0.5                    # High risk level threshold
risk_level_medium = 0.3                  # Medium risk level threshold

# Position sizing multipliers
position_size_high_risk_multiplier = 0.5 # Multiplier for high risk
position_size_medium_risk_multiplier = 0.75 # Multiplier for medium risk
liquidity_risk_multiplier = 0.7          # Multiplier for liquidity risk
volatility_risk_multiplier = 0.8         # Multiplier for volatility risk
volatility_threshold = 0.3                # Volatility threshold
liquidity_risk_threshold = 0.5           # Liquidity risk threshold

# Liquidity checks
min_liquidity_check = 5000.0              # Minimum liquidity for check
volume_to_liquidity_suspicious = 20.0    # Suspicious volume/liquidity ratio

# Portfolio risk
correlation_risk_divisor = 10.0           # Divisor for correlation risk
concentration_risk_threshold = 0.3       # Concentration risk threshold
liquidity_risk_portfolio_multiplier = 0.1 # Portfolio liquidity multiplier
total_risk_critical = 0.7                # Total risk critical threshold
total_risk_high = 0.5                    # Total risk high threshold
total_risk_medium = 0.3                  # Total risk medium threshold
daily_trades_warning_percentage = 0.8    # Warning at 80% of daily limit

# =============================================================================
# Strategy Thresholds Configuration
# =============================================================================
[strategy_thresholds]
# Stop loss multipliers
stop_loss_below_support = 0.95           # Stop loss below support (5%)
stop_loss_above_resistance = 1.05        # Stop loss above resistance (5%)
stop_loss_momentum_buy = 0.93            # Stop loss for momentum buy (7%)
stop_loss_momentum_sell = 1.07           # Stop loss for momentum sell (7%)

# Price targets
price_target_momentum_buy = 1.1          # Price target momentum buy (10%)
price_target_momentum_sell = 0.9         # Price target momentum sell (10%)

# Mean reversion
mean_reversion_upper_band = 1.1          # Upper band for mean reversion
mean_reversion_lower_band = 0.9          # Lower band for mean reversion
mean_reversion_buy_threshold = 1.02      # Buy near lower band (2%)
mean_reversion_sell_threshold = 0.98     # Sell near upper band (2%)
mean_reversion_stop_loss_buy = 0.95      # Stop loss mean reversion buy
mean_reversion_stop_loss_sell = 1.05     # Stop loss mean reversion sell
mean_reversion_confidence = 0.7          # Mean reversion confidence

# Momentum
momentum_threshold = 0.02                # Momentum threshold (2% in 5min)
momentum_confidence_multiplier = 10.0     # Confidence multiplier
momentum_max_confidence = 0.8            # Max momentum confidence

# Confidence calculation
base_confidence = 0.5                    # Base confidence for RSI signals
confluence_boost_multiplier = 0.3        # Confluence boost multiplier
rsi_boost_multiplier = 0.2               # RSI extremity boost
distance_boost_max = 0.1                 # Max distance boost
distance_boost_divisor = 0.1             # Distance boost divisor

# Signal scoring
volume_bonus_divisor = 100000.0          # Volume bonus divisor
volume_bonus_max = 0.1                   # Max volume bonus
liquidity_bonus_divisor = 50000.0        # Liquidity bonus divisor
liquidity_bonus_max = 0.1                # Max liquidity bonus
risk_reward_bonus_max = 0.2              # Max risk-reward bonus
risk_reward_bonus_divisor = 10.0         # Risk-reward bonus divisor

# Exit conditions
position_age_exit_hours = 4.0            # Exit position after hours
exit_urgency_stop_loss = 1.0             # Stop loss urgency
exit_urgency_take_profit = 0.8           # Take profit urgency
exit_urgency_time_based = 0.6            # Time-based exit urgency
exit_confidence_stop_loss = 1.0          # Stop loss confidence
exit_confidence_take_profit = 0.9        # Take profit confidence
exit_confidence_time_based = 0.7         # Time-based exit confidence

# Sentiment adjustments
sentiment_positive_threshold = 0.3       # Positive sentiment threshold
sentiment_negative_threshold = -0.3      # Negative sentiment threshold
sentiment_very_negative = -0.5           # Very negative sentiment
sentiment_confidence_boost = 0.1         # Sentiment confidence boost
sentiment_confidence_penalty = 0.2       # Sentiment confidence penalty

# =============================================================================
# Legacy Monitoring Configuration (for compatibility)
# =============================================================================
[monitoring]
prometheus_port = 9090
log_level = "INFO"
log_format = "json"
metrics_interval = 60
enable_alerts = true
alert_webhook_url = ""

# =============================================================================
# Telegram Alerts Configuration
# =============================================================================
[telegram]
enabled = true
token = "8499251370:AAEtMGNmMF3XwuwZgypA8O42-fjkaNWGocA"
chat_id = "6201158809"
parse_mode = "HTML"

# Alert types to enable
enable_trade_alerts = true
enable_risk_alerts = true
enable_performance_alerts = true
enable_system_alerts = true

# Message formatting
include_chart_links = false
max_message_length = 4096
rate_limit_seconds = 3

# Alert thresholds
min_trade_value_usd = 100.0
max_alerts_per_hour = 20
quiet_hours_start = "22:00"
quiet_hours_end = "08:00"

# =============================================================================
# RPC Provider Configuration
# =============================================================================
[rpc_providers]
# Configuration for RPC providers like Helius and QuickNode
# The router will select the best provider based on health and latency.

[rpc_providers.helius]
api_key_env = "HELIUS_API_KEY"
primary_rpc_env = "HELIUS_RPC_URL"
enable_shredstream = true
shredstream_endpoint_env = "HELIUS_SHREDSTREAM_ENDPOINT"
enable_priority_fee_api = true
enable_webhooks = true
webhook_types = ["token_transfers", "new_mints", "large_transactions", "account_changes"]
organic_score_enabled = true
tier = "developer"  # Options: "free", "developer", "pro", "enterprise"

[rpc_providers.quicknode]
primary_rpc_env = "QUICKNODE_PRIMARY_RPC"
secondary_rpc_env = "QUICKNODE_SECONDARY_RPC"
archive_rpc_env = "QUICKNODE_ARCHIVE_RPC"
enable_lil_jit = true
lil_jit_endpoint_env = "QUICKNODE_LIL_JIT_ENDPOINT"
enable_priority_fee_api = true

[rpc_providers.routing]
policy = "health_first"  # Options: "health_first", "latency_based", "cost_based", "environment_based", "round_robin"
latency_threshold_ms = 100
bundle_success_rate_threshold = 0.90
track_bundle_metrics = true
prefer_shredstream_for_mev = true
# =============================================================================
# PumpFun Backtesting Configuration
# =============================================================================
[backtesting]
# Enable/disable backtesting features
enabled = true
data_retention_days = 30

# Backtest execution parameters
max_concurrent_backtests = 10
default_initial_investment = 1000.0  # USD
default_simulation_hours = 24
default_time_interval = "5m"

# Performance optimization
enable_simd_vectorization = true
chunk_size = 1024
parallel_workers = 4
cache_price_history = true
cache_ttl_hours = 1

# Data sources and quality
[backtesting.data_sources]
jupiter_price_api_enabled = true
helius_metadata_enabled = true
quicknode_realtime_enabled = true
data_quality_threshold = 0.7
min_data_points = 50
max_data_gap_hours = 2

# PumpFun token analysis filters
[backtesting.pumpfun_filters]
# Token screening thresholds
min_market_cap_usd = 1000.0
max_market_cap_usd = 100000.0
min_liquidity_usd = 500.0
min_volume_24h_usd = 10000.0
max_age_hours = 168  # 1 week

# Security and safety checks
max_holder_concentration = 0.8    # 80% max holder concentration
min_holders = 10
max_creator_allocation = 0.2      # 20% max creator allocation
honeypot_risk_threshold = 0.7     # High risk threshold

# Social and community metrics
min_social_mentions = 5
min_social_sentiment = 0.3
max_social_spam_score = 0.8
min_telegram_members = 50
min_twitter_followers = 100

# Technical analysis criteria
min_trading_volume_usd = 5000.0
max_price_volatility = 0.5         # 50% max volatility
min_price_stability = 0.7         # Price stability score
trend_strength_threshold = 0.4    # Minimum trend strength
momentum_threshold = 0.02         # 2% momentum threshold

# Financial metrics
min_revenue_24h_usd = 0.0
max_supply_inflation = 0.1         # 10% max supply inflation
burn_rate_threshold = 0.05         # 5% burn rate threshold

# Risk management for backtesting
[backtesting.risk_management]
max_position_size_percent = 10.0   # 10% max position size
max_portfolio_risk = 0.02          # 2% max portfolio risk
max_drawdown_threshold = 0.15      # 15% max drawdown
stop_loss_percentage = 0.05        # 5% stop loss
take_profit_percentage = 0.10      # 10% take profit
max_leverage = 1.0                 # No leverage by default

# Execution simulation parameters
[backtesting.execution]
slippage_model = "linear"          # Options: "linear", "percentage", "volume_based"
base_slippage_percentage = 0.002   # 0.2% base slippage
commission_rate = 0.003            # 0.3% commission
max_slippage_percentage = 0.02     # 2% max slippage
min_trade_size_usd = 10.0
max_trade_size_usd = 10000.0

# Simulation timing parameters
order_execution_delay_ms = 100     # 100ms execution delay
block_confirmation_delay_ms = 400  # 400ms block delay
network_congestion_factor = 1.1    # 10% congestion factor

# Advanced backtesting features
[backtesting.advanced]
# Monte Carlo simulation
enable_monte_carlo = true
monte_carlo_simulations = 1000
confidence_intervals = [0.95, 0.99]

# Stress testing
enable_stress_testing = true
stress_scenarios = ["market_crash", "liquidity_crisis", "volatility_spike", "network_congestion"]
stress_test_multiplier = 2.0

# Sensitivity analysis
enable_sensitivity_analysis = true
sensitivity_parameters = ["slippage", "commission", "delay", "volatility"]

# Walk-forward optimization
enable_walk_forward = true
walk_forward_windows = [168, 336, 720]  # 1 week, 2 weeks, 1 month in hours
optimization_metric = "sharpe_ratio"

# Backtest validation and quality
[backtesting.validation]
enable_cross_validation = true
cross_validation_folds = 5
out_of_sample_percentage = 0.2     # 20% out-of-sample
min_backtest_period_days = 7
max_backtest_period_days = 365

# Statistical significance testing
significance_level = 0.05          # 5% significance level
min_trades_for_significance = 30
bootstrap_samples = 1000

# Performance benchmarking
enable_benchmarking = true
benchmark_strategies = ["buy_and_hold", "random_trading", "momentum_only", "mean_reversion_only"]
risk_free_rate = 0.02              # 2% annual risk-free rate

# Results storage and reporting
[backtesting.results]
enable_result_storage = true
result_storage_format = "json"     # Options: "json", "parquet", "csv"
detailed_trade_logs = true
performance_metrics = ["total_return", "sharpe_ratio", "max_drawdown", "win_rate", "profit_factor"]

# Report generation
generate_html_reports = true
generate_pdf_reports = false
include_charts = true
chart_resolution = "high"          # Options: "low", "medium", "high"

# Alert thresholds for backtesting
[backtesting.alerts]
enable_performance_alerts = true
performance_alert_threshold = 0.1  # 10% performance deviation
enable_error_alerts = true
max_error_rate = 0.05              # 5% max error rate
enable_timeout_alerts = true
max_timeout_rate = 0.02            # 2% max timeout rate

# Integration with monitoring
[backtesting.monitoring]
prometheus_metrics_enabled = true
metrics_port = 8002
granularity_seconds = 60          # Metrics granularity
custom_metrics = ["backtest_duration", "data_quality_score", "filter_pass_rate"]

# Health checks
health_check_interval_seconds = 30
health_check_timeout_seconds = 5
max_memory_usage_percent = 80
max_cpu_usage_percent = 90

# Historical data management
[backtesting.historical_data]
data_sources = ["jupiter", "coingecko", "defillama", "dexscreener"]
update_interval_hours = 1
historical_lookback_days = 365
data_compression = true
compression_ratio = 0.1             # 10% of original size

# Data quality metrics
enable_data_quality_monitoring = true
data_quality_threshold = 0.8
missing_data_tolerance = 0.05       # 5% missing data tolerance
outlier_detection_enabled = true
outlier_threshold_sigma = 3.0

# Backtest scheduling and automation
[backtesting.scheduling]
enable_scheduled_backtests = true
schedule_timezone = "UTC"
run_interval_hours = 6             # Run every 6 hours
batch_size = 50                    # Tokens per batch
enable_parallel_batches = true
max_parallel_batches = 4

# Backtest prioritization
prioritization_method = "market_cap"  # Options: "market_cap", "volume", "social_mentions", "random"
priority_tokens = []               # Manual priority token list
exclude_tokens = []                # Exclusion list

# Development and testing
[backtesting.development]
enable_debug_mode = false
debug_log_level = "DEBUG"
verbose_output = false
save_intermediate_results = false
mock_external_apis = false

# Test data and scenarios
test_data_directory = "./test_data"
test_scenarios_enabled = true
integration_tests_enabled = true
performance_tests_enabled = false

# =============================================================================
# Statistical Arbitrage Configuration (canonical for Python & Rust engines)
# =============================================================================

[statistical_arbitrage]
enabled = true                        # Toggle pairs trading engine (keep in sync with arbitrage.enable_statistical)
min_history_points = 50               # Minimum price history length for analysis
max_history_points = 1000             # Maximum price history length to retain
entry_z_threshold = 2.0               # Z-score threshold for entry signals
exit_z_threshold = 0.5                # Z-score threshold for exit signals
stop_loss_z_threshold = 3.0           # Hard stop-loss threshold (Z-score)
max_hurst_exponent = 0.5              # Maximum Hurst exponent for mean reversion
min_half_life_periods = 5             # Minimum half-life periods for mean reversion
cointegration_significance = 0.05     # P-value threshold for cointegration testing
cointegration_cache_hours = 24        # Hours to cache cointegration test results

# Performance optimization
enable_simd_optimization = true       # Use SIMD for spread calculations
max_calculation_time_ms = 10          # Maximum time for statistical calculations
enable_parallel_analysis = true       # Analyze multiple pairs simultaneously
max_concurrent_pairs = 10             # Maximum pairs to analyze concurrently

# Correlation and profitability requirements
min_correlation = 0.7                 # Minimum correlation for pair consideration
max_correlation = 0.95                # Maximum correlation (avoid over-correlation)
min_profit_bps = 10.0                 # Minimum profit expectation in basis points

# Pairs trading configuration
[statistical_arbitrage.pairs_trading]
monitored_pairs = [
    ["BTC", "ETH"],
    ["SOL", "ETH"],
    ["BTC", "SOL"],
    ["ETH", "USDC"],
    ["SOL", "USDC"]
]
correlation_lookback_periods = 100    # Periods for correlation calculation
correlation_update_interval = 24      # Hours between correlation updates
spread_mean_reversion_threshold = 2.0 # Z-score threshold for spread mean reversion
spread_half_life_max = 100            # Maximum acceptable half-life periods
spread_volatility_threshold = 0.1     # Maximum spread volatility for trading

# Risk management for statistical arbitrage
[statistical_arbitrage.risk]
max_position_size_percent = 0.20      # Maximum position size per stat arb trade
max_portfolio_allocation = 0.40       # Maximum portfolio allocation to stat arb
max_concurrent_positions = 3          # Maximum simultaneous stat arb positions
stop_loss_multiplier = 2.0            # Stop loss based on spread standard deviation
take_profit_multiplier = 1.5          # Take profit based on spread standard deviation
max_hurst_exponent_hard = 0.6         # Hard limit for Hurst exponent
min_half_life_periods_hard = 3        # Hard minimum for half-life
max_spread_volatility = 0.2           # Maximum acceptable spread volatility
cointegration_p_value_hard = 0.02     # Hard p-value threshold for cointegration

# Performance monitoring
[statistical_arbitrage.monitoring]
enable_performance_tracking = true    # Track stat arb performance metrics
calculation_latency_threshold_ms = 15 # Alert on slow calculations
success_rate_threshold = 0.6          # Minimum success rate for stat arb signals
sharpe_ratio_target = 1.5             # Target Sharpe ratio for stat arb strategy
max_drawdown_allowed = 0.15           # Maximum allowed drawdown

# External data sources for pairs trading
[statistical_arbitrage.data_sources]
enable_btc_data = true                # BTC price data for pairs trading
enable_eth_data = true                # ETH price data for pairs trading
enable_sol_data = true                # SOL price data for pairs trading
data_update_interval_seconds = 60     # Update interval for external data
data_quality_threshold = 0.9          # Minimum data quality for external sources

# =============================================================================
# Strategic Orchestrator Configuration (CEO Brain)
# =============================================================================
[orchestrator]
enabled = true                        # Enable strategic orchestrator
scoring_weights = { profit = 0.4, risk = 0.3, capital_efficiency = 0.2, strategy_bonus = 0.1 }
max_concurrent_opportunities = 10     # Parallel execution limit
opportunity_timeout_seconds = 30      # How long opportunities remain valid
capital_allocation_strategy = "dynamic"  # Strategy for capital distribution: fixed, dynamic, performance_based
decision_loop_interval_ms = 10        # Main decision loop frequency
adaptive_learning_enabled = true      # Enable adaptive weight adjustment
portfolio_heat_limit = 0.8            # Maximum portfolio heat before throttling
max_leverage_ratio = 3.0              # Maximum leverage ratio (including flash loans)

# =============================================================================
# 10-Token Arbitrage Configuration
# =============================================================================
[arbitrage.ten_token]
enabled = true                        # Enable 10-token arbitrage scanner
monitored_tokens = [
    "So11111111111111111111111111111111111111112",  # SOL
    "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v",  # USDC
    "Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB",  # USDT
    "DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263",  # BONK
    "JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN",  # JUP
    "EKpQGSJtjMFqKv9KELdc4xf8WouxiyU4uAXPch3HdK7q",  # WIF
    "CPz731XDgEQGpiuSwT2k3g2VHcB3nKWKV4dN9RqcnHrN",  # PYTH
    "jupoAsG4cAbk3RYE8d53kVnJJ9TZRkNUBgzU1U2iAqL",  # JTO
    "orcaEKTdK7LKzNvaCvpjnwUv3jRuVxYDZPkMqP3hFyDS",  # ORCA
    "4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R"   # RAY
]
monitored_dexes = ["raydium", "orca", "jupiter", "meteora"]
scan_interval_ms = 500                # Scan every 500ms
min_profit_threshold_sol = 0.05       # Minimum 0.05 SOL profit
use_flash_loan = true                 # Enable flash loan leverage
max_flash_loan_amount_sol = 100       # Maximum loan size
slippage_tolerance_bps = 300          # 3% slippage tolerance
max_slippage_scan_amount_sol = 10     # Max amount for slippage scanning
opportunity_ttl_seconds = 15          # Opportunity time-to-live

# =============================================================================
# Unified Sniper Configuration (Memecoin)
# =============================================================================
[sniper.memecoin]
enabled = true                        # Enable unified sniper engine
use_flash_loan = true                 # Enable leveraged sniping
max_flash_loan_amount_sol = 50        # Maximum flash loan for sniping
filters.lp_burn_threshold_bps = 9000  # 90% LP burn required
filters.mint_authority_revoked = true # Must have mint authority revoked
filters.max_top5_holder_percent = 30  # Maximum concentration for top 5 holders
filters.min_initial_liquidity_sol = 5000  # Minimum initial liquidity
filters.max_creator_allocation_percent = 5   # Maximum creator allocation
filters.min_social_mentions = 5       # Minimum social media mentions
filters.liquidity_lock_duration_hours = 720   # 30 days liquidity lock
simulation.enabled = true             # Dry-run before execution
simulation.timeout_ms = 100           # Simulation timeout
simulation.max_slippage_bps = 500     # 5% max slippage for simulation
target_profit_multiplier = 2.0        # Target profit multiple of flash loan fee
blacklist_enabled = true              # Enable creator blacklist
max_concurrent_snipes = 3             # Maximum concurrent sniping operations
min_token_age_seconds = 30            # Minimum token age before considering
max_token_age_hours = 2               # Maximum token age to consider

# =============================================================================
# Manual Targeting API Configuration
# =============================================================================
[manual_targeting]
enabled = true                        # Enable manual targeting API
api_port = 8081                       # API server port
require_two_step_approval = true      # Analyze then execute workflow
max_pending_targets = 50              # Maximum pending analyses
analysis_timeout_seconds = 60         # Maximum time for analysis
approval_timeout_minutes = 10         # Time to wait for approval
require_api_key = true                # Require API key authentication
rate_limit_per_minute = 10            # Rate limit per API key
webhook_url = ""                      # Optional webhook for notifications
max_simultaneous_users = 5            # Maximum concurrent API users

# =============================================================================
# DragonflyDB Configuration (Central Data Store)
# =============================================================================
[dragonflydb]
url = "${REDIS_URL}"                  # Use same env var for compatibility
max_connections = 50                  # Maximum concurrent connections
connection_timeout_seconds = 10       # Connection timeout
command_timeout_seconds = 30          # Command timeout
retry_attempts = 3                    # Number of retry attempts
retry_delay_ms = 100                  # Delay between retries
health_check_interval_seconds = 30    # Health check frequency
connection_pool_timeout_seconds = 5   # Connection pool timeout
enable_tls = true                     # Enable TLS encryption
enable_compression = true             # Enable data compression

# DragonflyDB Pub/Sub Channels
[dragonflydb.channels]
new_token_launches = "new_token_launches"
arbitrage_opportunities = "arbitrage_opportunities"
opportunity_queue = "opportunity_queue"
sniper_events = "sniper_events"
execution_results = "execution_results"
manual_targeting = "manual_targeting"
orchestrator_commands = "orchestrator_commands"
system_metrics = "system_metrics"
capital_state = "capital_state"
blacklist_updates = "blacklist_updates"

# DragonflyDB Data Structures
[dragonflydb.data_structures]
opportunity_queue_type = "sorted_set"  # Use sorted set for priority queue
capital_reservations_ttl = 300         # 5 minutes TTL for capital reservations
analysis_results_ttl = 3600           # 1 hour TTL for analysis results
metrics_retention_hours = 24           # 24 hours for metrics data
blacklist_ttl = 86400                 # 24 hours TTL for blacklist entries
trade_history_retention_days = 30      # 30 days for trade history

# =============================================================================
# Enhanced Flash Loan Configuration
# =============================================================================
[flash_loan.enhanced]
preferred_protocol = "save"            # Preferred protocol: save, solend, mango
auto_protocol_selection = true         # Auto-select best protocol based on amount
daily_limit_sol = 1000                # Daily flash loan limit
max_concurrent_loans = 5              # Maximum concurrent flash loans
simulation_required = true            # Require simulation before execution
simulation_timeout_ms = 200           # Simulation timeout
min_profit_over_fees_sol = 0.02       # Minimum profit over all fees
jito_bundle_enabled = true            # Use Jito bundles for MEV protection
priority_fee_strategy = "dynamic"     # Priority fee strategy: fixed, dynamic, market_based
max_priority_fee_sol = 0.01           # Maximum priority fee in SOL
bundle_tip_lamports = 10000           # Jito bundle tip
mev_protection_enabled = true         # Enable MEV protection measures
execution_timeout_seconds = 60        # Flash loan execution timeout

# Flash Loan Protocol Preferences
[flash_loan.enhanced.protocol_weights]
save = 0.7                           # 70% preference for Save
solend = 0.2                         # 20% preference for Solend
mango = 0.1                          # 10% preference for Mango

# Protocol-specific Limits
[flash_loan.enhanced.limits]
save_max_amount_sol = 500            # Save protocol max amount
save_min_amount_sol = 0.01           # Save protocol min amount
solend_max_amount_sol = 1000         # Solend protocol max amount
solend_min_amount_sol = 0.1          # Solend protocol min amount
mango_max_amount_sol = 2000          # Mango protocol max amount
mango_min_amount_sol = 0.5           # Mango protocol min amount
